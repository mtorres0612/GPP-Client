@model GPPClientModel.EmailDistributionList

@{
    ViewBag.Title = "Create Email Distribution List";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
       
        <div class="form-group">
            @Html.LabelFor(model => model.MsgCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MsgCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MsgCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ERP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ERP, new SelectList(ViewBag.erpList, "Value", "Text"), "Select SDS", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ERP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailSubject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailSubject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailSubject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddrFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul id="ulEmailAddrFrom"></ul>
                @Html.EditorFor(model => model.EmailAddrFrom, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.EmailAddrFrom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddrTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul id="ulEmailAddrTo"></ul>
                @Html.EditorFor(model => model.EmailAddrTo, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.EmailAddrTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddrCC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul id="ulEmailAddrCC"></ul>
                @Html.EditorFor(model => model.EmailAddrCC, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.EmailAddrCC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddrBCC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul id="ulEmailAddrBCC"></ul>
                @Html.EditorFor(model => model.EmailAddrBCC, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.EmailAddrBCC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtEmailAddrTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul id="ulExtEmailAddrTo"></ul>
                @Html.EditorFor(model => model.ExtEmailAddrTo, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.ExtEmailAddrTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtEmailAddrCC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul id="ulExtEmailAddrCC"></ul>
                @Html.EditorFor(model => model.ExtEmailAddrCC, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.ExtEmailAddrCC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.XsltPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.XsltPath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.XsltPath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2 hidden" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastEmailDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastEmailDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastEmailDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/custom")
}
