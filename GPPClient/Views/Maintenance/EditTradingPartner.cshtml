@model GPPClientModel.TradingPartner

@{
    ViewBag.Title = "Edit Trading Partner";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.Hidden("Mode", "Edit")

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2 hidden" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TradingPartnerCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TradingPartnerCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TradingPartnerCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ERP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ERP, new SelectList(ViewBag.erpList, "Value", "Text"), "Select ERP", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ERP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Principal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Principal", new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), new { @class = "form-control" })
                @Html.Hidden("PrincipalCode", Model.Principal)
                @Html.ValidationMessageFor(model => model.Principal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ColuCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ColuCode, new SelectList(ViewBag.countryList, "Value", "Text"), "Select Country", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ColuCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2 hidden" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 hidden" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control hidden" })
                @Html.Raw(@HttpUtility.HtmlDecode(@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" }).ToHtmlString()))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.XmlIdentityNode, htmlAttributes: new { @class = "control-label col-md-2 hidden" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.XmlIdentityNode, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.XmlIdentityNode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Indented, htmlAttributes: new { @class = "control-label col-md-2 hidden" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Indented, new { htmlAttributes = new { @class = "form-control hidden" } })
                    @Html.ValidationMessageFor(model => model.Indented, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2 hidden" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
