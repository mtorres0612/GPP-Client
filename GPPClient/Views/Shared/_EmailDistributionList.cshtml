@model GPPClientModel.EmailDistributionList

@{
    ViewBag.Title = "Edit Email Distribution List";
    Layout = null;
}

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Update Email Distribution List</h4>
        </div>
        <div class="modal-body">
            <script>
                $(function () {

                    $("#LastEmailDate, #LastEmailShortDate").datepicker();

                    $('#ulEmailAddrFrom').tagit({
                        singleField: true,
                        singleFieldNode: $('#EmailAddrFrom')
                    });

                    $('#ulEmailAddrTo').tagit({
                        singleField: true,
                        singleFieldNode: $('#EmailAddrTo')
                    });

                    $('#ulEmailAddrCC').tagit({
                        singleField: true,
                        singleFieldNode: $('#EmailAddrCC')
                    });

                    $('#ulEmailAddrBCC').tagit({
                        singleField: true,
                        singleFieldNode: $('#EmailAddrBCC')
                    });

                    $('#ulExtEmailAddrTo').tagit({
                        singleField: true,
                        singleFieldNode: $('#ExtEmailAddrTo')
                    });

                    $('#ulExtEmailAddrCC').tagit({
                        singleField: true,
                        singleFieldNode: $('#ExtEmailAddrCC')
                    });
                });
            </script>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Emldkey, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Emldkey, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Emldkey, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MsgCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MsgCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.MsgCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ERP, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ERP, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.ERP, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailSubject, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EmailSubject, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmailSubject, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailAddrFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <ul id="ulEmailAddrFrom"></ul>
                            @Html.EditorFor(model => model.EmailAddrFrom, new { htmlAttributes = new { @class = "form-control hidden" } })
                            @Html.ValidationMessageFor(model => model.EmailAddrFrom, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailAddrTo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <ul id="ulEmailAddrTo"></ul>
                            @Html.EditorFor(model => model.EmailAddrTo, new { htmlAttributes = new { @class = "form-control hidden" } })
                            @Html.ValidationMessageFor(model => model.EmailAddrTo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailAddrCC, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <ul id="ulEmailAddrCC"></ul>
                            @Html.EditorFor(model => model.EmailAddrCC, new { htmlAttributes = new { @class = "form-control hidden" } })
                            @Html.ValidationMessageFor(model => model.EmailAddrCC, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailAddrBCC, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <ul id="ulEmailAddrBCC"></ul>
                            @Html.EditorFor(model => model.EmailAddrBCC, new { htmlAttributes = new { @class = "form-control hidden" } })
                            @Html.ValidationMessageFor(model => model.EmailAddrBCC, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ExtEmailAddrTo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <ul id="ulExtEmailAddrTo"></ul>
                            @Html.EditorFor(model => model.ExtEmailAddrTo, new { htmlAttributes = new { @class = "form-control hidden" } })
                            @Html.ValidationMessageFor(model => model.ExtEmailAddrTo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ExtEmailAddrCC, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <ul id="ulExtEmailAddrCC"></ul>
                            @Html.EditorFor(model => model.ExtEmailAddrCC, new { htmlAttributes = new { @class = "form-control hidden" } })
                            @Html.ValidationMessageFor(model => model.ExtEmailAddrCC, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.XsltPath, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.XsltPath, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.XsltPath, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2 hidden" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control hidden" } })
                            @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastEmailShortDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastEmailShortDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastEmailShortDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="modal-footer">
            <input class="btn btn-success btn-md" type="submit" id="btnUpdate" name="Save" value="Update" />
            <button type="button" class="btn btn-default btn-md" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>
